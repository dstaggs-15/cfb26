name: Process Dynasty Submissions
on:
  issues:
    types: [opened]

# âœ… These scopes are required to write to the repo AND modify issues
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  parse-and-append:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Parse Issue Form -> JSON
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || ''
            const lines = body.split('\n').map(l => l.trim())
            const val = (label) => {
              const i = lines.findIndex(l => l.replace(/\*/g,'').toLowerCase() === label.toLowerCase())
              if (i === -1) return ''
              for (let j = i+1; j < lines.length; j++) if (lines[j]) return lines[j]
              return ''
            }

            const labels = (context.payload.issue.labels||[]).map(l=>l.name.toLowerCase())
            const title = (context.payload.issue.title||'').toLowerCase()
            let type = labels.includes('game') ? 'game'
                     : labels.includes('heisman') ? 'heisman'
                     : labels.includes('natty') ? 'natty'
                     : title.startsWith('[heisman]') ? 'heisman'
                     : title.startsWith('[natty]') ? 'natty'
                     : 'game'

            const payload = {
              type,
              year: val('Year'),
              homeCoach: val('Home Coach'),
              awayCoach: val('Away Coach'),
              homeTeam: val('Home Team'),
              awayTeam: val('Away Team'),
              homeScore: val('Home Score'),
              awayScore: val('Away Score'),
              winner: val('Winner (Coach)'),
              player: val('Player'),
              school: val('School'),
              team: val('Champion Team'),
              coach: val('Coach'),
              record: val('Record')
            }
            core.setOutput('json', JSON.stringify(payload, null, 2))

      - name: Append to data files
        run: |
          node -e '
            const fs = require("fs");
            const p = JSON.parse(process.env.FORM_JSON);
            const ensure = (path, init) => { if (!fs.existsSync(path)) fs.writeFileSync(path, JSON.stringify(init, null, 2)); };
            ensure("data/games.json", []);
            ensure("data/heisman.json", []);
            ensure("data/nationals.json", []);

            const year = Number(p.year)||null;
            const save = (path, arr) => fs.writeFileSync(path, JSON.stringify(arr, null, 2));

            if (p.type === "game") {
              const rec = {
                year,
                homeCoach: p.homeCoach, awayCoach: p.awayCoach,
                homeTeam: p.homeTeam, awayTeam: p.awayTeam,
                homeScore: Number(p.homeScore)||0, awayScore: Number(p.awayScore)||0,
                winner: p.winner,
                coaches: [p.homeCoach, p.awayCoach]
              };
              const path = "data/games.json";
              const arr = JSON.parse(fs.readFileSync(path));
              const key = r => [r.year,r.homeCoach,r.awayCoach,r.homeTeam,r.awayTeam,r.homeScore,r.awayScore].join("|");
              const exists = new Set(arr.map(key));
              if (!exists.has(key(rec))) arr.push(rec);
              save(path, arr);

            } else if (p.type === "heisman") {
              const rec = { year, player: p.player, school: p.school };
              const path = "data/heisman.json";
              const arr = JSON.parse(fs.readFileSync(path));
              const idx = arr.findIndex(x => x.year === year);
              if (idx >= 0) arr[idx] = rec; else arr.push(rec);
              save(path, arr);

            } else if (p.type === "natty") {
              const rec = { year, team: p.team, coach: p.coach, record: p.record||"" };
              const path = "data/nationals.json";
              const arr = JSON.parse(fs.readFileSync(path));
              const idx = arr.findIndex(x => x.year === year);
              if (idx >= 0) arr[idx] = rec; else arr.push(rec);
              save(path, arr);
            }
          '
        env:
          FORM_JSON: ${{ steps.parse.outputs.json }}

      - name: Commit data changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): append from issue #${{ github.event.issue.number }}"
          branch: ${{ github.ref_name }}  # commit back to main

      - name: Close issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: "closed",
              state_reason: "completed"
            })
